{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true,
    "cypress/globals": true,
    "jest": true
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "eslint-plugin-tsdoc",
    "cypress",
    "prettier",
    "patternfly-react"
  ],
  "extends": [
    "plugin:cypress/recommended",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "globals": {
    "describe": "readonly",
    "test": "readonly",
    "jest": "readonly",
    "expect": "readonly",
    "require": "readonly",
    "global": "writable",
    "it": "readonly",
    "afterEach": "readonly",
    "beforeEach": "readonly"
  },
  "rules": {
    "no-restricted-imports": [
      "error",
      {
        "name": "react",
        "importNames": ["useLayoutEffect"],
        "message": "`useLayoutEffect` causes a warning in SSR. Use `useEffect`"
      }
    ],
    "tsdoc/syntax": "warn",
    "cypress/no-assigning-return-values": "error",
    "cypress/no-unnecessary-waiting": "error",
    "cypress/assertion-before-screenshot": "warn",
    "cypress/no-force": "warn",
    "cypress/no-async-tests": "error",
    "@typescript-eslint/no-unsafe-member-access": [0],
    "@typescript-eslint/no-non-null-assertion": "off",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "quotes": ["error", "single"],
    "arrow-body-style": "error",
    "camelcase": [
      "error",
      {
        "ignoreDestructuring": true
      }
    ],
    "constructor-super": "error",
    "curly": "error",
    "dot-notation": "error",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "error",
    "max-classes-per-file": ["error", 1],
    "max-len": "off",
    "no-nested-ternary": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-new-wrappers": "error",
    "no-prototype-builtins": "error",
    "no-shadow": "off",
    "no-throw-literal": "error",
    "no-trailing-spaces": "off",
    "no-undef-init": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true,
        "allowShortCircuit": true
      }
    ],
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "one-var": ["error", "never"],
    "patternfly-react/import-tokens-icons": "error",
    "patternfly-react/no-anonymous-functions": "error",
    "prefer-const": "error",
    "prettier/prettier": "error",
    "radix": ["error", "as-needed"],
    "react/prop-types": 0,
    "react/display-name": 0,
    "react/no-unescaped-entities": ["error", { "forbid": [">", "}"] }],
    "spaced-comment": "error",
    "use-isnan": "error"
  }
}
